name: Validate Changed Metadata on PR

on:
  pull_request:
    branches:
      - main

jobs:
  validate-deployment-on-develop-org:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Read PR Body to detect test classes
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          echo "$PR_BODY" > ./pr_body.txt
          node ./parsePR.js
          TESTS=$(cat testsToRun.txt)
          echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV

      - name: Install Salesforce CLI
        run: |
          npm install --global sfdx-cli
          sfdx version

      - name: Install SFDX Scanner
        run: |
          sf plugins install code-analyzer

      - name: Authenticate with Salesforce (JWT)
        run: |
          echo "${{ secrets.SF_JWT_KEY }}" > server.key
          sfdx force:auth:jwt:grant \
            --clientid ${{ secrets.SF_CLIENT_ID }} \
            --jwtkeyfile server.key \
            --username ${{ secrets.SF_HUB_USERNAME }} \
            --instanceurl https://login.salesforce.com \
            --setalias prod

      - name: Detect delta and generate destructiveChanges.xml
        run: |
          mkdir -p changed-sources/force-app
          mkdir -p changed-sources/destructiveChanges

          echo '<?xml version="1.0" encoding="UTF-8"?>' > changed-sources/destructiveChanges/destructiveChanges.xml
          echo '<Package xmlns="http://soap.sforce.com/2006/04/metadata">' >> changed-sources/destructiveChanges/destructiveChanges.xml

          declare -A deleted_types

          while IFS=$'\t' read -r status file; do
            [[ "$file" != force-app/* ]] && continue

            if [[ "$status" == "D" ]]; then
              base="${file##*/}"
              if [[ "$file" == *.cls ]]; then
                deleted_types["ApexClass"]+=$'\n        <members>'"${base%.cls}"'</members>'
              elif [[ "$file" == *.trigger ]]; then
                deleted_types["ApexTrigger"]+=$'\n        <members>'"${base%.trigger}"'</members>'
              elif [[ "$file" == *.object-meta.xml ]]; then
                deleted_types["CustomObject"]+=$'\n        <members>'"${base%.object-meta.xml}"'</members>'
              fi
            else
              mkdir -p "changed-sources/$(dirname "$file")"
              cp "$file" "changed-sources/$file"
            fi
          done < <(git diff --name-status origin/main...HEAD)

          for key in "${!deleted_types[@]}"; do
            echo "  <types>" >> changed-sources/destructiveChanges/destructiveChanges.xml
            echo "${deleted_types[$key]}" >> changed-sources/destructiveChanges/destructiveChanges.xml
            echo "    <name>$key</name>" >> changed-sources/destructiveChanges/destructiveChanges.xml
            echo "  </types>" >> changed-sources/destructiveChanges/destructiveChanges.xml
          done

          echo "  <version>59.0</version>" >> changed-sources/destructiveChanges/destructiveChanges.xml
          echo "</Package>" >> changed-sources/destructiveChanges/destructiveChanges.xml

      - name: Scan Apex Code
        run: |
          cd changed-sources
          sf code-analyzer run \
              --format sarif \
              --target './**/*.cls' \
              --rule-selector Recommended:Design \
              --rule-selector Recommended:BestPractices \
              --rule-selector Recommended:Performance \
              --outfile 'apexScanResults.sarif'
          cd ..

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: changed-sources/apexScanResults.sarif

      - name: Validate delta (Run Specified Tests)
        if: ${{ env.APEX_TESTS != 'all' }}
        run: |
          sfdx force:source:deploy \
            -p "changed-sources/force-app" \
            --checkonly \
            --testlevel RunSpecifiedTests \
            --runtests ${{ env.APEX_TESTS }} \
            --json

      - name: Validate delta (Run All Local Tests)
        if: ${{ env.APEX_TESTS == 'all' }}
        run: |
          sfdx force:source:deploy \
            -p "changed-sources/force-app" \
            --checkonly \
            --testlevel RunLocalTests \
            --json

      - name: Deploy destructive changes (if any)
        run: |
          if [ -f "changed-sources/destructiveChanges/destructiveChanges.xml" ]; then
            sfdx force:mdapi:deploy \
              -d "changed-sources/destructiveChanges" \
              --checkonly \
              --ignorewarnings
          fi
